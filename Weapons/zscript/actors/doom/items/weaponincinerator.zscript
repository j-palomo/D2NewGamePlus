Class Incinerator : DoomWeapon replaces ID24Incinerator
{
	Default
	{
		Weapon.SlotNumber 8;
		Weapon.AmmoType "ID24Fuel";
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 20;
		Inventory.PickupMessage "$ID24_GOTINCINERATOR";
	}
	
	States
	{
		Spawn:
			INCN A -1;
			Stop;
		Ready:
			FLMG A 1 A_WeaponReady;
			Loop;
		Deselect:
			FLMG A 1 A_Lower;
			Loop;
		Select:
			FLMG A 1 A_Raise;
			Loop;
		Fire:
			FLMF A 1 Bright A_FireIncinerator();
			FLMF B 1 Bright A_WeaponOffset (random(-1,1), random(33,35), WOF_INTERPOLATE);
			FLMG B 1 A_WeaponOffset (0, 32, WOF_INTERPOLATE);
			FLMG A 1 A_ReFire;
			Goto Ready;
		Flash:
			TNT1 A 2 A_Light2;
			TNT1 A 1 A_Light1;
			Goto LightDone;
	}
	
	action void A_FireIncinerator ()
	{
		A_StartSound("weapons/incinerator/fire", CHAN_WEAPON);
		A_FireProjectile("IncineratorFlame");
		A_GunFlash ();
		A_WeaponOffset (random(-1,1), random(34,37), WOF_INTERPOLATE);
		A_Quake (0.5, 3, 0, 1, "");
	}
}

Class IncineratorFlame : Actor
{
	Int ripcount;
	property RipperCount: ripcount;
	Override int SpecialMissileHit (Actor victim)
	{
		ripcount--;
		If (ripcount == 0) bRIPPER = false;
		return Super.SpecialMissileHit (victim);
	}
	
	Default
	{
		Damage 3;
		DamageType "Fire";
		Speed 40;
		Radius 13;
		Height 8;
		PROJECTILE;
		RenderStyle "Add";
		Alpha 0.5;
		+FORCERADIUSDMG;
		+RIPPER;
		IncineratorFlame.RipperCount 8; // Allows the projectile to pass through smaller enemies, hitting anything behind it.
		Decal "Scorch";
	}
	states
	{
		spawn:
			TNT1 A 0 Bright NoDelay A_StartSound("weapons/incinerator/shot");
			IFLM ABCDEFGH 2 Bright {
				A_SpawnParticle ("FFA700", SPF_FULLBRIGHT, 35, 2.0, 0, Random (-5.0, 5.0), Random (-5.0, 5.0), Random (-1.0, 1.0), Random (-2.0, 2.0), Random (-5.0, 5.0), Random (1.0, 15.0), 0, 0, 0, 1.0, -1);
				A_SpawnParticle ("FFA700", SPF_FULLBRIGHT, 35, 2.0, 0, Random (-5.0, 5.0), Random (-5.0, 5.0), Random (-1.0, 1.0), Random (-2.0, 2.0), Random (-5.0, 5.0), Random (1.0, 15.0), 0, 0, 0, 1.0, -1);
				A_SpawnParticle ("FFA700", SPF_FULLBRIGHT, 35, 2.0, 0, Random (-5.0, 5.0), Random (-5.0, 5.0), Random (-1.0, 1.0), Random (-2.0, 2.0), Random (-5.0, 5.0), Random (1.0, 15.0), 0, 0, 0, 1.0, -1);
				A_SpawnParticle ("FFA700", SPF_FULLBRIGHT, 35, 2.0, 0, Random (-5.0, 5.0), Random (-5.0, 5.0), Random (-1.0, 1.0), Random (-2.0, 2.0), Random (-5.0, 5.0), Random (1.0, 15.0), 0, 0, 0, 1.0, -1);
			}
			stop;
		death:
			IFLM A 0 Bright A_Jump(128, "deathSound2");
			IFLM A 0 Bright A_StartSound("weapons/incinerator/hit1");
			goto burninate;
		deathSound2:
			IFLM A 0 Bright A_StartSound("weapons/incinerator/hit2");
			goto burninate;
		burninate:
			IFLM I 0 bright A_StartSound("weapons/incinerator/hit3");
			IFLM IJKLMNOP 2 bright A_Incinerate();
			stop;
	}
	
	action void A_Incinerate ()
	{
		A_Explode (3, 64.0);
		A_SpawnParticle ("FFA700", SPF_FULLBRIGHT, 35, 2.0, 0, Random (-5.0, 5.0), Random (-5.0, 5.0), Random (-1.0, 1.0), Random (-2.0, 2.0), Random (-5.0, 5.0), Random (1.0, 15.0), 0, 0, 0, 1.0, -1);
		A_SpawnParticle ("FFA700", SPF_FULLBRIGHT, 35, 2.0, 0, Random (-5.0, 5.0), Random (-5.0, 5.0), Random (-1.0, 1.0), Random (-2.0, 2.0), Random (-5.0, 5.0), Random (1.0, 15.0), 0, 0, 0, 1.0, -1);
		A_SpawnParticle ("FFA700", SPF_FULLBRIGHT, 35, 2.0, 0, Random (-5.0, 5.0), Random (-5.0, 5.0), Random (-1.0, 1.0), Random (-2.0, 2.0), Random (-5.0, 5.0), Random (1.0, 15.0), 0, 0, 0, 1.0, -1);
		A_SpawnParticle ("FFA700", SPF_FULLBRIGHT, 35, 2.0, 0, Random (-5.0, 5.0), Random (-5.0, 5.0), Random (-1.0, 1.0), Random (-2.0, 2.0), Random (-5.0, 5.0), Random (1.0, 15.0), 0, 0, 0, 1.0, -1);
	}
}