Class RebalancedSuperShotgun : DoomWeapon replaces SuperShotgun
{
	Bool NeedsReload;
	Override void PostBeginPlay()
	{
		NeedsReload = False;
	}
	Default
	{
		Weapon.SelectionOrder 300;
		Weapon.AmmoUse 2;
		Weapon.AmmoGive 8;
		Weapon.AmmoType "Shell";
		Weapon.SlotNumber 3;
		+WEAPON.AMMO_OPTIONAL;
		Inventory.PickupMessage "$GOTSHOTGUN2";
		Obituary "$OB_MPSSHOTGUN";
		Tag "$TAG_SUPERSHOTGUN";
		Decal "BulletChip";
	}
	
	States
	{
		Ready:
			SHT2 A 1 A_WeaponReady (WRF_AllowReload);
			Loop;
			
		Deselect:
			SHT2 A 1 A_Lower;
			Loop;
			
		Select:
			SHT2 A 1 A_Raise;
			Loop;
			
		Fire:
			SHT2 A 0 A_JumpIf (invoker.NeedsReload, "Reload");
			SHT2 A 3 A_FireSuperShotgunRebalanced;
			SHT2 A 2 A_WeaponOffset (0, 38, WOF_INTERPOLATE);
			SHT2 A 2 A_WeaponOffset (0, 32, WOF_INTERPOLATE);
			SHT2 A 0 A_ReFire ("Reload");
			Goto Ready;
		Reload:
			SHT2 A 1 {
				If (A_JumpIfNoAmmo ("Ready"))
					return ResolveState ("Ready");
				A_WeaponReady (WRF_NOFIRE);
				A_ClearReFire();
				return A_JumpIf (invoker.NeedsReload, "ActualReload");
			}
			Goto Ready;
		ActualReload:
			SHT2 B 7;
			SHT2 C 7;
			SHT2 D 7 {
				A_OpenShotgun2;
				A_EjectShell();
			}
			SHT2 E 7;
			SHT2 F 7 A_LoadShotgun2;
			SHT2 G 6 {
				invoker.NeedsReload = False;
				invoker.DepleteAmmo(invoker.bAltFire, true);
			}
			SHT2 B 6 A_CloseShotgun2;
			SHT2 H 6;
			SHT2 A 5 A_ReFire ("Fire");
			Goto Ready;
			
		Flash:
			SHT2 I 4 Bright A_Light1;
			SHT2 J 3 Bright A_Light2;
			Goto LightDone;
			
		Spawn:
			SGN2 A -1;
			Stop;
	}
	
	Action Void A_FireSuperShotgunRebalanced ()
	{
		A_FireBullets (11.2, 2.8, 20, 5, flags:0); // More accurate, same damage
		A_StartSound("weapons/shotgf", CHAN_WEAPON);
		A_GunFlash();
		A_Quake (3.5, 7, 0, 1, "");
		invoker.NeedsReload = True;
		A_WeaponOffset (0, 44, WOF_INTERPOLATE);
	}
	
	Action Void A_EjectShell ()
	{
		A_Quake (0.25, 5, 0, 1, "");
		A_SpawnItemEx ("EmptyShotgunShell", 8.0, -3.0, 30.0, 0, frandom(-4.0, -8.0), frandom(-1.0, -4.0), 0, SXF_NOCHECKPOSITION, 0, 0);
		A_SpawnItemEx ("EmptyShotgunShell", 8.0, -4.0, 30.0, 0, frandom(-4.0, -8.0), frandom(-1.0, -4.0), 0, SXF_NOCHECKPOSITION, 0, 0);
	}
}
