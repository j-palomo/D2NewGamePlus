	// Change these 4 constants if the final editor numbers for the weapons is decided
	const T_FuelAmmoSmall = 3200;
	const T_FuelAmmoLarge = 3201;
	const T_Incinerator = 3202;
	const T_Heatwave = 3203;
	//
	const SKILLS_NIGHTMARE = 16;
	const T_SpiderMastermind = 7;
	const T_ShotgunGuy = 9;
	const T_Cyberdemon = 16;
	const T_CellPack = 17;
	const T_Spectre = 58;
	const T_Archvile = 64;
	const T_ChaingunGuy = 65;
	const T_Revenant = 66;
	const T_Fatso = 67;
	const T_Arachnotron = 68;
	const T_HellKnight = 69; // nice
	const T_PainElemental = 71;
	const T_WolfensteinSS = 84;
	const T_BossEye = 89;
	const T_Shotgun = 2001;
	const T_Chaingun = 2002;
	const T_RocketLauncher = 2003;
	const T_PlasmaRifle = 2004;
	const T_Chainsaw = 2005;
	const T_BFG9000 = 2006;
	const T_Clip = 2007;
	const T_Shell = 2008;
	const T_RocketAmmo = 2010;
	const T_Stimpack = 2011;
	const T_Medikit = 2012;
	const T_Soulsphere = 2013;
	const T_HealthBonus = 2014;
	const T_ArmorBonus = 2015;
	const T_GreenArmor = 2018;
	const T_BlueArmor = 2019;
	const T_InvulnerabilitySphere = 2022;
	const T_Berserk = 2023;
	const T_BlurSphere = 2024;
	const T_RadSuit = 2025;
	const T_Allmap = 2026;
	const T_ExplosiveBarrel = 2035;
	const T_Infrared = 2045;
	const T_RocketBox = 2046;
	const T_Cell = 2047;
	const T_ClipBox = 2048;
	const T_ShellBox = 2049;
	const T_DoomImp = 3001;
	const T_Demon = 3002;
	const T_BaronOfHell = 3003;
	const T_Zombieman = 3004;
	const T_Cacodemon = 3005;
	const T_LostSoul = 3006;
	const T_Ghoul = 3007;
	const T_Banshee = 3008;
	const T_Mindweaver = 3009;
	const T_Shocktrooper = 3010;
	const T_Vassago = 3011;
	const T_Tyrant = 3012;
	const T_TyrantBoss1 = 3013;
	const T_TyrantBoss2 = 3014;
	const T_SecurityCamera = 9025;
	const T_PointLight = 9800;
	const T_SpotLight = 9840;
	const T_SecActEnter = 9998;

Class NGPLUS_LevelPostProcessor : LevelCompatibility
{
	protected uint SpawnThing (int ednum, Vector3 pos, int angle = 0, uint flags = MTF_SINGLE|MTF_COOPERATIVE)	{return AddThing(ednum, pos, angle, SKILLS_NIGHTMARE, flags);}
	protected uint SpawnPointLight (Vector3 pos, int red = 255, int green = 255, int blue = 255, int intensity = 64, int tid = 0)
	{
		uint SpawnedLight = SpawnThing(T_PointLight, pos, 0);
		SetThingArgument (SpawnedLight, 0, red);
		SetThingArgument (SpawnedLight, 1, green);
		SetThingArgument (SpawnedLight, 2, blue);
		SetThingArgument (SpawnedLight, 3, intensity);
		SetThingID (SpawnedLight, tid);
		return SpawnedLight;
	}
	
	protected uint SpawnSpotLight (Vector3 pos, int red = 255, int green = 255, int blue = 255, int intensity = 64, int angle = 0, int inner_angle = 8, int outer_angle = 32, int tid = 0)
	{
		uint SpawnedLight = SpawnThing(T_SpotLight, pos, angle);
		int r, g, b;
		r = (red << 16);
		g = (green << 8);
		b = blue;
		int lightcolor = r|g|b; 
		SetThingArgument (SpawnedLight, 0, lightcolor);
		SetThingArgument (SpawnedLight, 1, inner_angle);
		SetThingArgument (SpawnedLight, 2, outer_angle);
		SetThingArgument (SpawnedLight, 3, intensity);
		SetThingID (SpawnedLight, tid);
		return SpawnedLight;
	}
}